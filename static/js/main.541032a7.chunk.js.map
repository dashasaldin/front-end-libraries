{"version":3,"sources":["serviceWorker.js","App.js","MarkdownPage.js","DrumMachine.js","Routes.js","index.js","JSCalculator.js"],"names":["Boolean","window","location","hostname","match","App","useState","quote","setQuote","useEffect","getQuote","a","fetch","json","result","className","id","class","content","author","href","onClick","MarkdownPage","value","setValue","type","onChange","event","target","source","escapeHtml","drumPads","key","audio","text","DrumMachine","currentPad","setCurrentPad","play","pad","Audio","keypress","e","find","toLowerCase","document","addEventListener","removeEventListener","map","src","Routes","exact","path","component","JSCalculator","ReactDOM","render","StrictMode","basename","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","buttons","isSign","calculate","currentValue","eval","clearValue","parts","split","RegExp","lastPart","length","endsWith","substring","indexOf","lastIndexOf","startsWith","setCurrentValue","button","calculatedResult","toString","handleClick"],"mappings":"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","file":"static/js/main.541032a7.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, {useState, useEffect} from 'react';\nimport './App.css';\n\n\nfunction App() {\n  const [quote, setQuote] = useState(null);\n\n  useEffect(()=> {\n    if(!quote) {\n      getQuote();\n    }\n  }, [quote]);\n\n  const getQuote = async () => {\n    const json = await fetch(\"https://api.quotable.io/random\");\n    const result = await json.json();\n    setQuote(result);\n  }\n\n  return (\n    <div className=\"quote-page-container\"> \n      <div id=\"quote-box\">\n        {quote && (\n          <>\n      <div id=\"text\">\n        <i class=\"fa fa-quote-left\"> </i>\n        <span className=\"quote-text\">{quote.content}</span>\n      </div>\n      <div id=\"author\">\n        {quote.author}\n      </div></>)}\n        <div className=\"buttons\">\n          <a className=\"button\" id=\"tweet-quote\" href=\"https://twitter.com/intent/tweet\" >\n            <i className=\"fa fa-twitter\"></i>\n          </a>\n          <a className=\"button\" onClick={getQuote} href=\"#\" id=\"new-quote\">New quote</a>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React,{useState} from 'react';\nimport ReactMarkdown from \"react-markdown\";\nimport './MarkdownPage.css'\n\nfunction MarkdownPage() {\n  const [value, setValue] = useState(`\n# Welcome to my React Markdown Previewer! \n\n## This is a sub-heading... \n### And here's some other cool stuff: \n\nHeres some code, \\`<div></div>\\`, between 2 backticks.\n\n\\`\\`\\`\n// this is multi-line code:\n\nfunction anotherExample(firstLine, lastLine) {\n  if (firstLine == '\\`\\`\\`' &amp;&amp; lastLine == '\\`\\`\\`') {\n    return multiLineCode;\n  }\n}\n\\`\\`\\`\n\nYou can also make text **bold**... whoa!\\n\nOr _italic_. \\n\nOr... wait for it... **_both!_** \\n\nAnd feel free to go crazy ~~crossing stuff out~~.\n\nThere's also [links](https://www.freecodecamp.com), and\n> Block Quotes!\n\nAnd if you want to get really crazy, even tables:\n\nWild Header | Crazy Header | Another Header?\n------------ | ------------- | -------------\nYour content can | be here, and it | can be here....\nAnd here. | Okay. | I think we get it.\n\n- And of course there are lists.\n  - Some are bulleted.\n      - With different indentation levels.\n        - That look like this.\n\n\n1. And there are numbererd lists too.\n1. Use just 1s if you want!\n1. And last but not least, let's not forget embedded images:\n\n![React Logo w/ Text](https://goo.gl/Umyytc)`\n    )\n  const onChange = (event) => {\n    setValue(event.target.value);\n    }\n  return (\n    <div className=\"markdown-page\">\n      <textarea id=\"editor\" type=\"text\" value={value} onChange={onChange} />\n      <div id=\"preview\">\n        <ReactMarkdown source={value} escapeHtml={false}></ReactMarkdown>\n      </div>\n    </div>\n  );\n}\n\nexport default MarkdownPage;\n","import React,{useState, useEffect} from 'react';\nimport './DrumMachine.css'\n\nconst drumPads = [\n    {key: \"Q\", audio: \"https://s3.amazonaws.com/freecodecamp/drums/Heater-1.mp3\", text: \"Heater-1\"},\n    {key: \"W\", audio: \"https://s3.amazonaws.com/freecodecamp/drums/Heater-2.mp3\", text: \"Heater-2\"},\n    {key: \"E\", audio: \"https://s3.amazonaws.com/freecodecamp/drums/Heater-3.mp3\", text: \"Heater-3\"},\n    {key: \"A\", audio: \"https://s3.amazonaws.com/freecodecamp/drums/Heater-4_1.mp3\", text: \"Heater-4\"},\n    {key: \"S\", audio: \"https://s3.amazonaws.com/freecodecamp/drums/Heater-6.mp3\", text: \"Clap\"},\n    {key: \"D\", audio: \"https://s3.amazonaws.com/freecodecamp/drums/Dsc_Oh.mp3\", text: \"Open-HH\"},\n    {key: \"Z\", audio: \"https://s3.amazonaws.com/freecodecamp/drums/Kick_n_Hat.mp3\", text: \"Kick-n'-Hat\"},\n    {key: \"X\", audio: \"https://s3.amazonaws.com/freecodecamp/drums/RP4_KICK_1.mp3\", text: \"Kick\"},\n    {key: \"C\", audio: \"https://s3.amazonaws.com/freecodecamp/drums/Cev_H2.mp3\", text: \"Closed-HH\"}\n]\n\n\nfunction DrumMachine() {\n    const [ currentPad, setCurrentPad ] = useState();\n    const play = (pad) => {\n        setCurrentPad(pad);\n        new Audio(pad.audio).play();\n    }\n\n    const keypress = (e) => {\n        const pad = drumPads.find((pad) => pad.key.toLowerCase() === e.key)\n        if(pad) {\n            play(pad)\n        }\n    } \n\n    useEffect(() => {\n        document.addEventListener(\"keypress\", keypress);\n\n        return () => document.removeEventListener(\"keypress\", keypress);\n    }, [])\n\n    return (\n        <div className=\"outer-container\"> \n        <div id=\"drum-machine\">\n            <div className=\"drum-pads\">\n                {drumPads.map((pad) => (\n                    <div className=\"drum-pad\" onClick={() => play(pad)}>\n                        <>\n                            {pad.key}\n                            <audio className=\"clip\" id={pad.key} src={pad.audio}></audio>\n                        </>\n\n                    </div>\n                ))}\n            </div>\n           <div id=\"display\">\n                {currentPad && (\n                    <>{currentPad.text}</>\n                )}\n            </div> \n        </div>\n        </div>\n    )\n\n}\n\nexport default DrumMachine;","import React from 'react';\nimport {Route, Switch} from 'react-router-dom';\nimport App from './App';\nimport MarkdownPage from './MarkdownPage';\nimport DrumMachine from './DrumMachine';\nimport JSCalculator from './JSCalculator';\n\nconst Routes = () => (\n    <Switch>\n        <Route exact path='/' component={App}/>\n        <Route exact path=\"/markdown\" component={MarkdownPage} />\n        <Route exact path=\"/drum-machine\" component={DrumMachine} />\n        <Route exact path=\"/js-calculator\" component={JSCalculator}/>\n    </Switch>\n)\n\nexport default Routes;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport { HashRouter } from 'react-router-dom';\nimport Routes from './Routes';\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter basename=\"/front-end-libraries\">\n      <Routes/>\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React,{useState, useEffect} from 'react';\nimport './JSCalculator.css'\n\n\nconst buttons = [\n    {key: \"AC\", id: \"clear\", type: \"clear\"},\n    {key: \"/\", id: \"divide\", type: \"divide\"},\n    {key: \"*\", id: \"multiply\", type: \"multiply\"},\n    {key: \"7\", id: \"seven\", type: \"number\"},\n    {key: \"8\", id: \"eight\",type: \"number\" },\n    {key: \"9\", id: \"nine\", type: \"number\"},\n    {key: \"-\", id: \"subtract\", type: \"subtract\", isSign: true},\n    {key: \"4\", id: \"four\", type: \"number\"},\n    {key: \"5\", id: \"five\", type: \"number\"},\n    {key: \"6\", id: \"six\", type: \"number\"},\n    {key: \"+\", id: \"add\", type: \"add\", isSign: true},\n    {key: \"1\", id: \"one\", type: \"number\"},\n    {key: \"2\", id: \"two\", type: \"number\"},\n    {key: \"3\", id: \"three\", type: \"number\"},\n    {key: \".\", id: \"decimal\", type: \"decimal\"},\n    {key: \"0\", id: \"zero\", type: \"number\"},\n    {key: \"=\", id: \"equals\", type: \"equals\"}\n]\n\nconst calculate = (currentValue) => eval(currentValue)\nconst clearValue = (value) => {\n    let parts =  value.split(new RegExp(\"[/*+-]\"));\n    let lastPart = parts[parts.length-1];\n    if(parts.length > 1 && lastPart === \"\" && parts[parts.length-2] === \"\" && !value.endsWith(\"-\")) {\n        value = `${value.substring(0, value.length - 2)}${value.substring(value.length - 1)}`;\n        if(parts[parts.length-3] === \"\") {\n            value = `${value.substring(0, value.length - 2)}${value.substring(value.length - 1)}`;\n        }\n    }\n    if(lastPart != \"\") {\n        if(lastPart.indexOf(\".\") != lastPart.lastIndexOf(\".\") || lastPart.startsWith(\"00\")) {\n            value = value.substring(0, value.length - 1);\n        }\n        if(lastPart.length > 1 && lastPart.startsWith(\"0\")) {\n            value = value.substring(1);\n        }\n    }\n    return value;\n}\n \nfunction JSCalculator() {\n    const[ currentValue, setCurrentValue] = useState(\"\");\n    const handleClick = (button) => {\n        switch(button.type) {\n            case \"clear\": {\n                setCurrentValue(\"\");\n                return;\n            }\n            case \"equals\": {\n                const calculatedResult = calculate(currentValue);\n                setCurrentValue(calculatedResult.toString());\n                return;\n            }\n            default: {\n                setCurrentValue(clearValue(`${currentValue}${button.key}`));\n            }\n        }\n    }\n\n    return (\n        <div className=\"outer-container\"> \n        <div id=\"js-calculator\">\n            <div className=\"calculator-buttons\">\n                {buttons.map((button) => (\n                    <div id={button.id} className=\"calculator-button\" onClick={() => handleClick(button)}>\n                            {button.key}\n                    </div>\n                ))}\n            </div>\n           <div id=\"display\">{currentValue ? currentValue : '0' }</div>\n        </div>\n        </div>\n    )\n}\n\n\n\n\nexport default JSCalculator;"],"sourceRoot":""}